services:
  # БД PostgreSQL
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketplace_inventory
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
  #Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Микросервисы
  inventory-service:
    build:
      context: .
      dockerfile: marketplace-inventory-service/Dockerfile
    container_name: inventory-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace_inventory
    depends_on:
      postgres:
        condition: service_healthy

  notification-service:
    build:
      context: .
      dockerfile: marketplace-notification-service/Dockerfile
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started

  order-service:
    build:
      context: .
      dockerfile: marketplace-order-service/Dockerfile
    container_name: order-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace_inventory
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      inventory-service:
        condition: service_started
      user-service:
        condition: service_started
      pricing-service:
        condition: service_started

  payment-service:
    build:
      context: .
      dockerfile: marketplace-payment-service/Dockerfile
    container_name: payment-service
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started

  pricing-service:
    build:
      context: .
      dockerfile: marketplace-pricing-service/Dockerfile
    container_name: pricing-service
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  user-service:
    build:
      context: .
      dockerfile: marketplace-user-service/Dockerfile
    container_name: user-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace_inventory
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
  kafka-data:
  zookeeper-data: